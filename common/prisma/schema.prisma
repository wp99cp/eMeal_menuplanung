datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL_MONGODB")
}

generator client {
  provider = "prisma-client-js"
  output   = env("PRISMA_OUTPUT")
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  password          String?
  emailVerified     Boolean? @default(false)
  refresh_token     String?  @db.String
  access_token      String?  @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.String
  session_state     String?
  created_at        Int?
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

/// Represents a user account
model User {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  // base data of the user
  name       String?
  email      String? @unique
  username   String? @unique @default(cuid())
  shareEmail Boolean @default(false)

  emailVerified DateTime? /// date of the last email verification, null if not verified

  image    String?
  accounts Account[]
  sessions Session[]

  // registration meta data
  newUser      Boolean  @default(true) /// new users may have not finished the onboarding process
  registeredAt DateTime @default(now()) /// the date and time of account creation
}
